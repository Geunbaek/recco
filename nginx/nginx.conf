worker_processes auto;
events {
    worker_connections 1024;
}

http {
    upstream server {
        server server:8000;
    }

    upstream client {
         server client:3000;
    }

    include  /etc/nginx/mime.types;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;

        server_name localhost;
        
        # location ^~ /.well-known/acme-challenge/ {
        #     allow all;
        #     root /usr/share/nginx/html/letsencrypt;
        # }

        location / {
            return 301 https://www.recco.n-e.kr$request_uri;
        }

        # location /api {
        #     rewrite /api(.*) $1 break;
        #     proxy_pass         http://server;
        #     proxy_redirect     off;
        #     proxy_set_header   Host $host;
        #     proxy_set_header   X-Real-IP $remote_addr;
        #     proxy_set_header   X-Forwarded-Proto $scheme;
        #     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        # }
        
        #  location / {
        #     proxy_pass         http://client;
        #     proxy_redirect     off;
        #     proxy_set_header   Host $http_host;
        #     proxy_set_header   Upgrade $http_upgrade;
        #     proxy_set_header   Connection "Upgrade";
        #     proxy_read_timeout      300;
        # }

    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ;

        server_name localhost;

        ssl on;
        server_tokens off;
        ssl_certificate /etc/nginx/ssl/live/www.recco.n-e.kr/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/live/www.recco.n-e.kr/privkey.pem;
        ssl_dhparam /etc/nginx/dhparam/dhparam-2048.pem;
     
        # ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
        # ssl_prefer_server_ciphers on;
        # ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

        location /api {
            rewrite /api(.*) $1 break;
            proxy_pass         http://server;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        location / {
            proxy_pass         http://client;
            proxy_redirect     off;
            proxy_set_header   Host $http_host;
            proxy_set_header   Upgrade $http_upgrade;
            proxy_set_header   Connection "Upgrade";
            proxy_read_timeout      300;
        }
    }
}